{"componentChunkName":"component---src-templates-post-jsx","path":"/item-70/","result":{"data":{"site":{"siteMetadata":{"title":"023.log"}},"markdownRemark":{"id":"04096e69-9c9c-5140-9c12-5e388d6a1dfb","excerpt":"자바는 문제 상황을 알리는 타입(throwable)으로 검사 예외, 런타임 예외, 에러 이렇게 세 가지를 제공하고 있다.\n이 글에서는 이러한 검사 예외, 런타임 예외, 에러가 무엇이고 언제 사용해야 하는지 알아본다. 검사 예외 (Checked Exception) 호출하는 쪽에서 복구하리라 여겨지는 상황이라면 검사 예외를 사용해야 한다.\n검사 예외는 예외를…","html":"<p>자바는 문제 상황을 알리는 타입(throwable)으로 검사 예외, 런타임 예외, 에러 이렇게 세 가지를 제공하고 있다.\n이 글에서는 이러한 검사 예외, 런타임 예외, 에러가 무엇이고 언제 사용해야 하는지 알아본다.</p>\n<h2 id=\"검사-예외-Checked-Exception\" style=\"position:relative;\"><a href=\"#%EA%B2%80%EC%82%AC-%EC%98%88%EC%99%B8-Checked-Exception\" aria-label=\"검사 예외 Checked Exception permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>검사 예외 (Checked Exception)</h2>\n<p>호출하는 쪽에서 복구하리라 여겨지는 상황이라면 검사 예외를 사용해야 한다.\n검사 예외는 예외를 던지면 호출자가 그 예외를 <code class=\"language-text\">catch</code>로 잡아 처리하거나 더 바깥으로 전파하도록 강제하게 된다.\n이러한 검사 예외는 메서드를 호출하는 쪽에서 회복하리라 여겨지는 상황에서 사용해야 하는데\n달리 말하면, API 설계자는 API 사용자에게 검사 예외를 던져주어 그 상황에서 회복해내라고 요구하는 것이다.</p>\n<h2 id=\"비검사-예외-Unchecked-Exception\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EA%B2%80%EC%82%AC-%EC%98%88%EC%99%B8-Unchecked-Exception\" aria-label=\"비검사 예외 Unchecked Exception permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>비검사 예외 (Unchecked Exception)</h2>\n<p>비검사 예외는 <code class=\"language-text\">RuntimeException</code>를 상속 받은 클래스로서, 런타임 시 프로그래밍 오류를 나타낼 때 사용한다.\n이런 <code class=\"language-text\">throwable</code>을 잡지 않은 스레드는 적절한 오류 메시지를 내뱉으며 중단된다.\n런타임 예외의 대부분은 전제조건을 만족하지 못했을 때 발생한다.\n전제조건 위배란 단순히 클라이언트가 해당 API의 명세에 기록된 제약을 지키지 못했다는 뜻이다.\n그 예로 배열 인덱스를 벗어나는 경우가 이에 해당한다.\n배열의 인덱스는 0에서 배열 크기 -1 사이여야 한다.\n<code class=\"language-text\">ArrayIndexOutOfBoundsException</code>이 발생했다는 건 이 전제 조건이 지켜지지 않았다는 뜻이다.</p>\n<h2 id=\"에러-Error\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-Error\" aria-label=\"에러 Error permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>에러 (Error)</h2>\n<p>에러는 <code class=\"language-text\">Error</code>를 상속 받은 클래스로 보통 JVM이 자원부족, 불변식 깨짐 등 더 이상 수행을 계속할 수 없는 상황을 나타낼 때 사용한다.\n여기서 주의할 점은 Error 클래스를 상속해 하위 클래스를 만드는 일은 자제하지 말아야 한다.\n다시 말해 우리가 구현하는 비검사 <code class=\"language-text\">throwable</code>은 모두 <code class=\"language-text\">RuntimeException</code>의 하위 클래스여야 한다는 뜻이다..\n<code class=\"language-text\">Error</code>는 상속하지 말아야 할 뿐 아니라, throw 문으로 직접 던지는 일도 없어야 한다.(단, <code class=\"language-text\">AssertionError</code>는 예외이다.)</p>\n<h2 id=\"검사-예외와-비검사-예외\" style=\"position:relative;\"><a href=\"#%EA%B2%80%EC%82%AC-%EC%98%88%EC%99%B8%EC%99%80-%EB%B9%84%EA%B2%80%EC%82%AC-%EC%98%88%EC%99%B8\" aria-label=\"검사 예외와 비검사 예외 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>검사 예외와 비검사 예외</h2>\n<p>그럼 언제 검사 예외를 사용해야 하고, 언제 비검사 예외를 사용해야 할까?\n해당 고민은 API 설계자의 판단에 달려있는데 복구 가능하다고 생각하면 검사 예외를, 불가능하다면 비검사 예외를 사용해야 한다.\n만일 확신하기 어렵다면 비검사 예외를 사용하는 것이 좋다.(아이템 71)</p>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>정리</h2>\n<p>복구할 수 있는 상황이면 검사 예외를, 프로그래밍 오류라면 비검사 예외를 던지자.\n확실하지 않다면 비검사 예외를 던지자.\n검사 예외도 아니고 런타임 예외도 아닌 throwable은 정의하지도 말자.\n검사 예외라면 복구에 필요한 정보를 알려주는 메서드도 제공하자.</p>","frontmatter":{"title":"복구할 수 있는 상황에는 검사 예외를, 프로그래밍 오류에는 런타임 예외를 사용하라","date":"February 27, 2025","update":null,"tags":["Java","Effective Java"],"series":"Effective Java"},"fields":{"slug":"/item-70/","readingTime":{"minutes":4.15}}},"seriesList":{"edges":[{"node":{"id":"9142cd48-5969-5dff-8b0a-1ca7f8164545","fields":{"slug":"/item-05/"},"frontmatter":{"title":"자원을 직접 명시하지 말고 의존 객체 주입을 사용하라"}}},{"node":{"id":"5e51d765-fc56-5fc0-9efb-93e8c323c43c","fields":{"slug":"/item-16/"},"frontmatter":{"title":"public 클래스에서는 public 필드가 아닌 접근자 메서드를 사용하라"}}},{"node":{"id":"b20a27d1-efe1-5df8-8fc6-70b1b621850d","fields":{"slug":"/item-15/"},"frontmatter":{"title":"클래스와 멤버의 접근 권한을 최소화하라"}}},{"node":{"id":"008bff3b-a610-5097-8737-2973f0ce221f","fields":{"slug":"/item-21/"},"frontmatter":{"title":"인터페이스는 구현하는 쪽을 생각해 설계하라"}}},{"node":{"id":"78d5ae48-9cb5-5099-8ecb-b3affdd38d6d","fields":{"slug":"/item-32/"},"frontmatter":{"title":"제네릭과 가변인수를 함께 쓸 때는 신중하라"}}},{"node":{"id":"7062e173-15fc-579c-9637-8d4985247b51","fields":{"slug":"/item-34/"},"frontmatter":{"title":"int 상수 대신 열거 타입을 사용하라"}}},{"node":{"id":"8371ee7e-c8e5-5d9e-9d38-b9b2746109f4","fields":{"slug":"/item-41/"},"frontmatter":{"title":"정의하려는 것이 타입이라면 마커 인터페이스를 사용하라"}}},{"node":{"id":"d92c4181-6f18-5bd8-8112-ebdeea20d1b8","fields":{"slug":"/item-45/"},"frontmatter":{"title":"스트림은 주의해서 사용하라"}}},{"node":{"id":"e8799441-784b-564e-abd8-f428bd17fbbf","fields":{"slug":"/item-50/"},"frontmatter":{"title":"적시에 방어적 복사본을 만들라"}}},{"node":{"id":"37fdf916-e063-5f1a-a06b-3568879ad41a","fields":{"slug":"/item-59/"},"frontmatter":{"title":"라이브러리를 익히고 사용하라"}}},{"node":{"id":"8ef87ff6-7121-5097-a925-9bc153b516c8","fields":{"slug":"/item-60/"},"frontmatter":{"title":"정확한 답이 필요하다면 float와 double은 피하라"}}},{"node":{"id":"b3f590e8-63d6-5dff-8ff4-2b714334f8da","fields":{"slug":"/item-62/"},"frontmatter":{"title":"다른 타입이 적절하다면 문자열 사용을 피하라"}}},{"node":{"id":"04096e69-9c9c-5140-9c12-5e388d6a1dfb","fields":{"slug":"/item-70/"},"frontmatter":{"title":"복구할 수 있는 상황에는 검사 예외를, 프로그래밍 오류에는 런타임 예외를 사용하라"}}},{"node":{"id":"0c718971-d9cf-5605-a829-7e0d99f6c909","fields":{"slug":"/item-79/"},"frontmatter":{"title":"과도한 동기화는 피하라"}}}]},"previous":{"fields":{"slug":"/annotation-modifying-with-transactional/"},"frontmatter":{"title":"@Query와 @Modifying만 사용하면 될까?"}},"next":{"fields":{"slug":"/static-resources-attack/"},"frontmatter":{"title":"서버에 비정상적인 요청은 어떻게 대응해야 할까?"}}},"pageContext":{"id":"04096e69-9c9c-5140-9c12-5e388d6a1dfb","series":"Effective Java","previousPostId":"fe87df1d-0330-5345-8fc9-6fe633d3dee1","nextPostId":"5204b390-54c4-5a3d-898b-8dbe85eeec62"}},"staticQueryHashes":[],"slicesMap":{}}