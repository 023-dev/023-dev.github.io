{"componentChunkName":"component---src-templates-post-jsx","path":"/static-resources-attack/","result":{"data":{"site":{"siteMetadata":{"title":"023.log"}},"markdownRemark":{"id":"5204b390-54c4-5a3d-898b-8dbe85eeec62","excerpt":"최근 개발 중인 서버에 무수히 많은 에러 로그와 트래픽이 발생하는 이슈가 발생했다.\n이는 찾아보니 디렉토리 스캔 공격이었고,\n이 글에서는 이러한 이슈를 어떻게 대응했는지에 대해 기록하고자 한다.\n그리고 이를 통해 다른 개발자들이 비슷한 이슈에 대해 대응하는데 도움이 되길 바란다. 어떤 로그가 있었나? CI/CD 파이프 라인을 구축하고 개발 서버 로그를 확…","html":"<p>최근 개발 중인 서버에 무수히 많은 에러 로그와 트래픽이 발생하는 이슈가 발생했다.\n이는 찾아보니 디렉토리 스캔 공격이었고,\n이 글에서는 이러한 이슈를 어떻게 대응했는지에 대해 기록하고자 한다.\n그리고 이를 통해 다른 개발자들이 비슷한 이슈에 대해 대응하는데 도움이 되길 바란다.</p>\n<h2 id=\"어떤-로그가-있었나\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%96%A4-%EB%A1%9C%EA%B7%B8%EA%B0%80-%EC%9E%88%EC%97%88%EB%82%98\" aria-label=\"어떤 로그가 있었나 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>어떤 로그가 있었나?</h2>\n<p>CI/CD 파이프 라인을 구축하고 개발 서버 로그를 확인하던 중, 다음과 같은 로그를 발견했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">193.41</span>.206.72 - - <span class=\"token punctuation\">[</span><span class=\"token number\">28</span>/Feb/2025:11:59:01 +0000<span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET /.env HTTP/1.1\"</span> <span class=\"token number\">301</span> <span class=\"token number\">178</span> <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"-\"</span>\"0.000<span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:02 +0000] \"</span>GET .env HTTP/1.1<span class=\"token string\">\" 400 166 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.249</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:03 +0000] \"</span>GET /vendor/.env HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.008</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:03 +0000] \"</span>GET /prod/.env.bak HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.011</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:03 +0000] \"</span>GET /prod/config.env HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.006</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:03 +0000] \"</span>GET /prod/.env.dist HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.004</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:04 +0000] \"</span>GET /prod/.env.dev HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.006</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:04 +0000] \"</span>GET /product/.env.bak HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.005</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:04 +0000] \"</span>GET /product/config.env HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.011</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:04 +0000] \"</span>GET /product/.env.dist HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.005</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:05 +0000] \"</span>GET /product/.env.dev HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.006</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:05 +0000] \"</span>GET /production/.env.bak HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.007</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:05 +0000] \"</span>GET /production/config.env HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.008</span><span class=\"token string\">\"\n193.41.206.72 - - [28/Feb/2025:11:59:05 +0000] \"</span>GET /production/.env.dist HTTP/1.1<span class=\"token string\">\" 400 102 \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\" \"</span>-<span class=\"token string\">\"\"</span><span class=\"token number\">0.006</span>\"</code></pre></div>\n<p>현재 프로젝트와 전혀 무관한 정적 리소스 파일 경로였고, 비정상 적이게 많은 요청이 발생했다.\n위에 로그는 5초 동안의 로그이며, 1분간 계속해서 이러한 로그가 발생했다.\n특히, .env 같은 민감한 정보의 파일을 요청하는 로그가 많았다.\n만약 해당 파일이 노출된다면, 데이터베이스 접속 정보나 API 키 등이 유출될 수 있어 보안에 치명적인 문제가 될 수 있다.\n그래서 정황상 봇(bot)으로 자동화된 스캔 공격 시도로 판단하고, 이에 대한 대응을 진행하기로 했다.</p>\n<h2 id=\"그래서-어떻게-대응했나\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8C%80%EC%9D%91%ED%96%88%EB%82%98\" aria-label=\"그래서 어떻게 대응했나 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>그래서 어떻게 대응했나?</h2>\n<p>먼저 요청이 들어오는 입구를 도메인을 통한 요청으로만 중앙화하고,\n중앙화된 요청을 필터링을 통하여 관리하기로 했다.\n그래서 제일 먼저 AWS 보안 그룹 설정을 변경했다.\nHTTPS 전환 전까지 사용했던 HTTP(80) 포트를 삭제하고, HTTPS(443)만 허용하도록 변경했다.\n그리고 8080 포트를 VPC 내부에서만 접근 가능하도록 수정했고, 모든 트래픽 허용 규칙도 삭제했다.\n이들은 모두 앞서 진행했던 인프라 작업 후 불필요하게 열려있던 포트들이었다.\n설정을 마친 후 테스트도 진행했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-I</span> http://dev.unretired.co.kr  <span class=\"token comment\"># 접속 제한</span></code></pre></div>\n<p>AWS Layer에서는 우선 이렇게 처리하고, 본격적으로 Nginx에서 보안 설정을 하고자했다.\n하지만, 혹시 모를 경우에 대비하여 근본적으로 현재 실행 중인 애플리케이션인 Spring Boot의 application.yml 설정을 변경하여 정적 리소스 서빙을 비활성화했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spring.web.resources.add-mappings</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<p>이제 Nginx만 설정하면 당장 대응이 가능할 것으로 판단했다.\n위의 로그들을 보고 공격을 감행하던 경로를 패턴으로 설정하고, 해당 경로로 요청이 들어오면 403 Forbidden을 반환하도록 설정했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token directive\"><span class=\"token keyword\">location</span> ~* \\.(env|config\\.env|aws/credentials|git|bak|old|dist|dev|local)$</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">deny</span> all</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">return</span> <span class=\"token number\">403</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 설정을 마치고, curl 테스트를 진행했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">HTTP/1.1 <span class=\"token number\">403</span> Forbidden\nServer: nginx/1.24.0 <span class=\"token punctuation\">(</span>Ubuntu<span class=\"token punctuation\">)</span>\nDate: Fri, <span class=\"token number\">28</span> Feb <span class=\"token number\">2025</span> <span class=\"token number\">14</span>:11:51 GMT\nContent-Type: text/html\nContent-Length: <span class=\"token number\">162</span>\nConnection: keep-alive</code></pre></div>\n<p>이제 Nginx 설정은 잘 작동하는 것 같다.</p>\n<h2 id=\"아직-끝이-아니다\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%A7%81-%EB%81%9D%EC%9D%B4-%EC%95%84%EB%8B%88%EB%8B%A4\" aria-label=\"아직 끝이 아니다 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>아직 끝이 아니다</h2>\n<p>현재까지는 확인된 공격에 한해서만 대응한 것이었다.\n설정을 마친 후, 얼마 안가 Nginx 로그를 확인하니 다른 공격 시도가 있었다.\n그래서 이를 방지하기 위해 고민을 했고, 이렇게만 대응하면 안될 것 같아 찾아보았다.</p>\n<p>두 가지 방법을 찾았는데, AWS WAF(AWS Web Application Firewall)와 Fail2Ban이었다.\nAWS WAF는 악성 트래픽을 차단하는 AWS의 서비스로, 적용하는 방법도 간단했다.\n하지만 이렇게 설정하면 당연하게도 비용이 발생하고, 현재 상황에서는 이 정도의 대응이 필요한지 판단이 어려웠다.</p>\n<p>그래서 비정상적인 요청을 필터링 기능과 금전적인 자원이 들지 않는 선에서 다른 방법을 고민하게 되었고, Fail2Ban을 적용하기로 했다.\nFail2Ban은 로그를 모니터링하고, 설정한 패턴에 맞는 IP를 자동으로 차단하는 오픈소스 프로그램으로\n이를 통해 공격 시도를 차단할 수 있을 것으로 판단했다.</p>\n<h2 id=\"Fail2Ban-설정\" style=\"position:relative;\"><a href=\"#Fail2Ban-%EC%84%A4%EC%A0%95\" aria-label=\"Fail2Ban 설정 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Fail2Ban 설정</h2>\n<p>Fail2Ban 구조에 대해 간단히 설명하자면 클라이언트와 서버로 이루어져 있다.\n여기서 서버는 멀티스레드이며 소켓을 받아 명령을 실행한다.\n그리고 클라이언트는 서버 구성 및 동작을 하기 위한 명령어들을 보낸다.\n그렇기에 이를 통해서 Fail2Ban의 기능들을 설정할 수 있다.</p>\n<p>실제로 차단(Ban)하는 방법에 대한 정책 규정은 <code class=\"language-text\">jail.local</code> 파일에 설정할 수 있다.\n사용자가 지정한 로그 파일들을 대상으로 필터링을 해서 규칙에 맞는 로그가 발생하면 해당 IP를 차단한다.\n기본적으로 많은 정책들이 있고, 이를 통해 다양한 공격 시도에 대응할 수 있다.\n추가로 감지 횟수와 차단 시간을 설정할 수 있어서, 이를 통해 더욱 세밀한 대응이 가능하다.\n이후 커스텀 액션이라는 개념이 존재해 정책에 맞는 작업을 수행하고 이메일 전송 같은 작업도 가능하게 되어있다.</p>\n<p>이제 설정해보자. 먼저 Fail2Ban을 설치하겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> fail2ban</code></pre></div>\n<p>그리고 필터링 설정 파일을 수정해야 한다.\n파일들은 기본적으로 <code class=\"language-text\">/etc/fail2ban/filter.d/</code>에 위치해있다.\n지금은 Nginx에 들어오는 로그를 필터링하고 차단하는 설정을 해야한다.\n이러한 설정은 <code class=\"language-text\">nginx-bad-request.conf</code>에서 기본 설정을 제공해주고 있다.\n400 Bad Request와 403 Forbidden 로그를 필터링해야 하기에 다음과 같이 설정했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Definition</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">failregex</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">^&lt;HOST> .* \"(GET|POST|HEAD|OPTIONS|PUT|DELETE|PATCH).*\" 400</span>\n            ^&lt;HOST> .* \"(GET|POST|HEAD|OPTIONS|PUT|DELETE|PATCH).*\" 403\n<span class=\"token key attr-name\">ignoreregex</span> <span class=\"token punctuation\">=</span></code></pre></div>\n<p>설명하자면 <code class=\"language-text\">failregex</code>는 필터링할 로그의 패턴을 정의하는 부분이다.\n<code class=\"language-text\">&lt;HOST></code>는 IP를 의미하며, <code class=\"language-text\">400</code>과 <code class=\"language-text\">403</code>은 HTTP 상태 코드를 의미한다.\n이렇게 설정하면 400 Bad Request와 403 Forbidden 로그를 필터링할 수 있다.</p>\n<p>이제 설정 파일을 만들어야 한다.\n<code class=\"language-text\">/etc/fail2ban/jail.local</code> 파일을 만들어서 설정을 추가하자.\njail.local 파일은 jail.conf 파일을 오버라이드하는 설정 파일이다.\n이 파일에 설정을 추가하면 jail.conf 파일에 있는 설정을 덮어쓰게 된다.\n고로 jail.local 파일에 설정을 추가하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">nginx-bad-request</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">enabled</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">true</span>\n<span class=\"token key attr-name\">filter</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">nginx-bad-request</span>\n<span class=\"token key attr-name\">logpath</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/var/log/nginx/access.log</span>\n<span class=\"token key attr-name\">maxretry</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">10</span>\n<span class=\"token key attr-name\">findtime</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">1m</span>\n<span class=\"token key attr-name\">bantime</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">10m</span></code></pre></div>\n<p>이 부분도 간단히 설명하자면 <code class=\"language-text\">enabled</code>는 해당 설정을 사용할지 여부를 나타내며, <code class=\"language-text\">filter</code>는 사용할 필터를 지정한다.\n<code class=\"language-text\">logpath</code>는 필터링할 로그 파일을 지정하고, <code class=\"language-text\">maxretry</code>는 허용할 최대 실패 횟수를 의미한다.\n<code class=\"language-text\">findtime</code>은 <code class=\"language-text\">maxretry</code>를 적용할 시간을 의미하며, <code class=\"language-text\">bantime</code>은 차단할 시간을 의미한다.\n여기서 설정 내용은 1분 동안 10번 이상의 400 Bad Request와 403 Forbidden 로그가 발생하면 해당 IP를 10분 동안 차단한다는 의미이다.\n왜 1분 동안 10번 이상으로 했냐하면 개발 서버이기에 프론트 서버 응답에 대한 테스트를 진행하고 있기 때문이다.\n배포였다면 좀 더 타이트하게 잡았을 것 같다.</p>\n<p>이렇게 해서 설정을 마치고, 적용하겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">systemctl restart fail2ban\nfail2ban-client <span class=\"token function\">add</span> nginx-bad-request\nfail2ban-client status nginx-bad-request</code></pre></div>\n<p>잘 돌아가는 지 상태 로그를 확인해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Status <span class=\"token keyword\">for</span> the jail: nginx-bad-request\n<span class=\"token operator\">|</span>- Filter\n<span class=\"token operator\">|</span>  <span class=\"token operator\">|</span>- Currently failed:\t<span class=\"token number\">0</span>\n<span class=\"token operator\">|</span>  <span class=\"token operator\">|</span>- Total failed:\t<span class=\"token number\">26</span>\n<span class=\"token operator\">|</span>  <span class=\"token variable\"><span class=\"token variable\">`</span>- File list: nginx-bad-request\n<span class=\"token variable\">`</span></span>- Actions\n   <span class=\"token operator\">|</span>- Currently banned:\t<span class=\"token number\">3</span>\n   <span class=\"token operator\">|</span>- Total banned:\t<span class=\"token number\">5</span>\n   `- Banned IP list:</code></pre></div>\n<p>이렇게 뜨면 설정이 잘 적용된 것이다.\n이제 이를 통해 공격 시도를 차단할 수 있을 것으로 기대한다.\n물론 근본적인 해결책은 아니기에 적용 후에도 문제가 된다면 WAF 등을 도입해볼 계획이다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/65650622/how-to-define-a-location-regex-matching-block-in-nginx-conf\">How to define a location regex matching block in nginx.conf</a></li>\n<li><a href=\"https://stackoverflow.com/questions/65650622/how-to-define-a-location-regex-matching-block-in-nginx-conf\">Nginx Security Best Practices</a></li>\n<li><a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">AWS WAF Official Docs</a></li>\n<li><a href=\"https://github.com/fail2ban/fail2ban\">Fail2Ban GitHub</a></li>\n<li><a href=\"https://www.fail2ban.org/wiki/index.php/Main_Page\">Fail2Ban Official Docs</a></li>\n<li><a href=\"https://serverfault.com/questions/625656/sharing-of-fail2ban-banned-ips\">Sharing of fail2ban banned IPs</a></li>\n</ul>","frontmatter":{"title":"디렉토리 스캔 공격은 어떻게 대응해야 할까?","date":"February 28, 2025","update":null,"tags":["Server","Nginx","Fail2Ban","TroubleShooting"],"series":null},"fields":{"slug":"/static-resources-attack/","readingTime":{"minutes":11.34}}},"seriesList":{"edges":[{"node":{"id":"ebf552bc-59ea-5969-b86b-bad95404ee87","fields":{"slug":"/ssl-protocol/"},"frontmatter":{"title":"SSL Protocol"}}},{"node":{"id":"af6c0192-819a-5110-957c-643bdd4721be","fields":{"slug":"/nginx-config/"},"frontmatter":{"title":"Nginx 설정하기"}}},{"node":{"id":"07aa966e-666d-563f-85c8-b3b4ad26865d","fields":{"slug":"/git-conventions/"},"frontmatter":{"title":"협업을 위한 Git 컨벤션"}}},{"node":{"id":"e4531ca2-2ac9-531b-9164-8b64c75e5a19","fields":{"slug":"/interview/"},"frontmatter":{"title":"면접관 사로잡기"}}},{"node":{"id":"9b20fef2-3067-501e-bf1c-8496cd150398","fields":{"slug":"/spring-data-jpa-paging/"},"frontmatter":{"title":"Spring Data JPA의 Slice & Page"}}},{"node":{"id":"454be74c-98b2-50d6-b615-f4263c00d08c","fields":{"slug":"/java-generic/"},"frontmatter":{"title":"자바 제네릭(Generics)"}}},{"node":{"id":"fc065a5d-53ab-5dd6-9dc4-b127396ed80f","fields":{"slug":"/java-lambda-stream/"},"frontmatter":{"title":"자바 람다(Lambda)와 스트림(Stream)"}}},{"node":{"id":"64c66682-ed51-5379-89ee-2f70d12e2b57","fields":{"slug":"/java-exception-error/"},"frontmatter":{"title":"자바 에러(Error)와 예외처리(Exception)"}}},{"node":{"id":"825cb64a-cf12-5e2e-b87c-df8b6cb230ff","fields":{"slug":"/java-try-catch/"},"frontmatter":{"title":"자바 예외 처리하기(Exception Handling)"}}},{"node":{"id":"d9372afe-4014-5507-bcbd-e38e62b29471","fields":{"slug":"/java-systemout-log/"},"frontmatter":{"title":"System.out.println()를 사용한 로깅을 피해야 하는 이유"}}},{"node":{"id":"7aa8046a-802e-536c-b5f9-e78ad5517c2f","fields":{"slug":"/java-string/"},"frontmatter":{"title":"자바 문자열(String)"}}},{"node":{"id":"005e9485-4c2c-5c35-b905-d3ed1b9e798f","fields":{"slug":"/java-reflection/"},"frontmatter":{"title":"자바 리플렉션(Reflection)"}}},{"node":{"id":"5964f927-8a79-5de0-841b-8fed223ba0f9","fields":{"slug":"/java-string-stringbuffer-stringbuilder/"},"frontmatter":{"title":"String과 StringBuffer 그리고 StringBuilder"}}},{"node":{"id":"133813fe-ca42-5aa4-841f-f6bf4141d1d3","fields":{"slug":"/java-throw-chained-exception/"},"frontmatter":{"title":"throw와 throws 그리고 Chained Exception"}}},{"node":{"id":"098b32ab-5cc8-5f3a-b9ce-06c252ec53e7","fields":{"slug":"/java-thread/"},"frontmatter":{"title":"프로세스(Process)와 스레드(Thread)"}}},{"node":{"id":"4225fe9e-27ba-5b63-b8b6-7093b3c971e7","fields":{"slug":"/java-collection-framework/"},"frontmatter":{"title":"자바 컬렉션 프레임워크(Collection Framework)"}}},{"node":{"id":"990727b3-c221-5882-9668-c35326197a0b","fields":{"slug":"/java-arraylist/"},"frontmatter":{"title":"ArrayList 컬렉션"}}},{"node":{"id":"ac99cdaa-53ef-5270-b59e-c63ad05b0ba3","fields":{"slug":"/java-atomic/"},"frontmatter":{"title":"멀티 스레드 환경에서 동시성 프로그래밍"}}},{"node":{"id":"25229769-0008-5747-b590-dbc1023da764","fields":{"slug":"/java-hashmap/"},"frontmatter":{"title":"HashMap 컬렉션"}}},{"node":{"id":"a5d8aab9-4761-54fb-8033-e3e5428162ee","fields":{"slug":"/java-multi-thread/"},"frontmatter":{"title":"자바 멀티 스레딩"}}},{"node":{"id":"10e407f2-9715-504c-a60f-29a3b4cb67df","fields":{"slug":"/java-cas-aba/"},"frontmatter":{"title":"CAS(Compare-And-Swap)와 ABA 문제"}}},{"node":{"id":"9c443690-789a-5153-a234-67772da4ff2d","fields":{"slug":"/java-vector-hashtable-synchronizedxxx/"},"frontmatter":{"title":"Vector와 Hashtable 그리고 Collections.SynchronizedXXX"}}},{"node":{"id":"a642a0b6-afce-5363-a262-bccfb0f2ef20","fields":{"slug":"/java-synchroniedlist-copyonwritearraylist/"},"frontmatter":{"title":"SynchronizedList와 CopyOnWriteArrayList의 차이"}}},{"node":{"id":"01f5976a-4e46-5969-ad10-603a8b529141","fields":{"slug":"/java-concurrenthashmap-synchronizedmap/"},"frontmatter":{"title":"SynchronizedMap vs ConcurrentHashMap"}}},{"node":{"id":"479b1b49-88d0-53dd-b25f-7b05a6d4acd7","fields":{"slug":"/java-garbage-collection/"},"frontmatter":{"title":"가비지 컬렉션(Garbage Collection)"}}},{"node":{"id":"389d424f-8a02-5fdb-8339-76124899e09c","fields":{"slug":"/java-virtual-machine/"},"frontmatter":{"title":"자바 가상 머신(Java Virtual Machine)"}}},{"node":{"id":"af409114-6f24-5568-8d8c-1553078dd692","fields":{"slug":"/java-object/"},"frontmatter":{"title":"자바 Object 클래스"}}},{"node":{"id":"e956dc3c-ab5a-5788-ab9d-e6932f21b1cd","fields":{"slug":"/java-identity-equality/"},"frontmatter":{"title":"동일성(Identity)와 동등성(Equality)"}}},{"node":{"id":"09fe0da4-1757-5eb6-90d4-18b4ba1d5d9e","fields":{"slug":"/java-primitive-reference/"},"frontmatter":{"title":"기본형(Primitive)과 참조형(Reference)"}}},{"node":{"id":"6df7f449-35cb-5e68-8d5d-80799a314831","fields":{"slug":"/database-phantom-read/"},"frontmatter":{"title":"Phantom Read와 Gap Lock, Next-Key Lock"}}},{"node":{"id":"d4156b41-43d2-511a-90b3-af9d47d4739d","fields":{"slug":"/database-dbms/"},"frontmatter":{"title":"데이터베이스 관리 시스템(DBMS)"}}},{"node":{"id":"39296236-cab8-5f64-9c3a-4216b3db11c5","fields":{"slug":"/java-immutable/"},"frontmatter":{"title":"불변 객체(Immutable Object)"}}},{"node":{"id":"3d4ae372-9791-5064-b476-2d3aca08f12e","fields":{"slug":"/java-string-optimization/"},"frontmatter":{"title":"문자열 최적화(String Optimization)"}}},{"node":{"id":"fa45f65c-d108-57f6-a1c2-e36ed09a23b2","fields":{"slug":"/java-wrapper-class/"},"frontmatter":{"title":"래퍼 클래스(Wrapper Class)"}}},{"node":{"id":"535b9757-cd58-551a-bfe8-3657aa82ea9e","fields":{"slug":"/java-class-system/"},"frontmatter":{"title":"자바 Class 클래스와 System 클래스"}}},{"node":{"id":"8d757819-398e-5dd2-89a2-58e6bba8a704","fields":{"slug":"/java-enum/"},"frontmatter":{"title":"자바 열거형 타입(Type-Safe Enum Pattern)"}}},{"node":{"id":"7ea4d566-e53f-515a-bd42-7b1298d7d6f9","fields":{"slug":"/database-data-independency/"},"frontmatter":{"title":"데이터 독립성(Data Independence)"}}},{"node":{"id":"a395659b-15d8-5494-b9ab-f10f367bd55c","fields":{"slug":"/database-rdbms/"},"frontmatter":{"title":"관계형 데이터베이스 관리 시스템(RDBMS)"}}},{"node":{"id":"2f78f287-e52a-5403-8b0e-45e8406b20f8","fields":{"slug":"/database-sql/"},"frontmatter":{"title":"SQL(Structured Query Language)"}}},{"node":{"id":"b933390c-7e98-5e83-8e61-6510f9c37a4a","fields":{"slug":"/database-architecture-caching-strategy/"},"frontmatter":{"title":"캐싱 전략(Caching Strategy)"}}},{"node":{"id":"2f2d4165-e533-5227-83dc-c78a353a5843","fields":{"slug":"/database-constraints/"},"frontmatter":{"title":"제약 조건(Constraints)"}}},{"node":{"id":"fb5cb17b-0afd-54ed-9d15-7d39a0a1e6d8","fields":{"slug":"/mysql-delete-truncate-drop/"},"frontmatter":{"title":"MySQL의 DELETE, TRUNCATE, DROP 차이"}}},{"node":{"id":"ddc7aadd-c2b4-537e-86ef-5da0a0f987ce","fields":{"slug":"/mysql-limit-offset/"},"frontmatter":{"title":"MySQL의 Pagination"}}},{"node":{"id":"afdb871b-8a87-545a-b3d3-dcbb36454b18","fields":{"slug":"/boj-2776/"},"frontmatter":{"title":"2776 암기왕"}}},{"node":{"id":"c3de373e-9923-51bb-81bf-7e7b8acb3f9c","fields":{"slug":"/boj-1654/"},"frontmatter":{"title":"1654 랜선 자르기"}}},{"node":{"id":"d79c2dea-56e4-5f4e-ba34-3cb949e9c362","fields":{"slug":"/boj-2512/"},"frontmatter":{"title":"2512 예산"}}},{"node":{"id":"51225c19-1cf3-5058-8943-dc41bc0eac90","fields":{"slug":"/boj-11663/"},"frontmatter":{"title":"11663 선분 위의 점"}}},{"node":{"id":"287deadf-40de-5a3a-9545-342fd478f804","fields":{"slug":"/database-index/"},"frontmatter":{"title":"인덱스(Index)"}}},{"node":{"id":"ff01aabc-69b7-5efa-b11e-9b2c2c6007ff","fields":{"slug":"/database-explain-query-hint/"},"frontmatter":{"title":"실행 계획과 쿼리 최적화"}}},{"node":{"id":"879a45c4-b438-5e30-b986-6a4fbcf179c3","fields":{"slug":"/boj-2805/"},"frontmatter":{"title":"2805 나무 자르기"}}},{"node":{"id":"c553b71b-99ee-54e4-99c1-28158b54878a","fields":{"slug":"/database-storage-and-random-sequantial-io/"},"frontmatter":{"title":"저장 매체와 랜덤 I/O, 순차 I/O"}}},{"node":{"id":"5172cb65-97e3-52f1-a2ef-51935d94c748","fields":{"slug":"/boj-2343/"},"frontmatter":{"title":"2343 기타 레슨"}}},{"node":{"id":"7fed17e5-3250-5f81-b864-7f719203a651","fields":{"slug":"/database-ssd-faster-than-hdd/"},"frontmatter":{"title":"SSD를 사용하면 DBMS가 빨라질까?"}}},{"node":{"id":"b8479007-2406-5b98-a027-2437a5c27be6","fields":{"slug":"/boj-2470/"},"frontmatter":{"title":"2470 두 용액"}}},{"node":{"id":"0192b957-d4c7-5ef9-bb0d-bd44452e72ad","fields":{"slug":"/boj-2110/"},"frontmatter":{"title":"2110 공유기 설치"}}},{"node":{"id":"2840da70-822e-5706-bd49-bcef59e88efd","fields":{"slug":"/boj-1260/"},"frontmatter":{"title":"1260 DFS와 BFS"}}},{"node":{"id":"c58dd773-ac71-5951-8381-989f6a01b642","fields":{"slug":"/prog-immigration/"},"frontmatter":{"title":"프로그래머스 입국심사"}}},{"node":{"id":"c37121f6-1974-5663-94a2-f840c17b21cb","fields":{"slug":"/boj-3079/"},"frontmatter":{"title":"3079 입국심사"}}},{"node":{"id":"8f131117-8e43-550c-a9c2-f426134f7559","fields":{"slug":"/boj-1697/"},"frontmatter":{"title":"1697 숨바꼭질"}}},{"node":{"id":"5e43441d-65a2-5400-aa7e-08adda263e4a","fields":{"slug":"/boj-2667/"},"frontmatter":{"title":"2667 단지번호붙이기"}}},{"node":{"id":"5323ab88-9e67-5d24-bb72-ad4c2137a0ea","fields":{"slug":"/datavase-normalization/"},"frontmatter":{"title":"데이터베이스 정규화(Normalization)"}}},{"node":{"id":"fd4f64da-5d81-5f7a-9375-5118fd1b6c47","fields":{"slug":"/boj-1707/"},"frontmatter":{"title":"1707 이분 그래프"}}},{"node":{"id":"49a050bd-e29b-5ad5-a873-ad7900d76bbc","fields":{"slug":"/boj-2573/"},"frontmatter":{"title":"2573 빙산"}}},{"node":{"id":"7d0e1c93-56d9-556d-8ed7-7920e7470762","fields":{"slug":"/boj-12425/"},"frontmatter":{"title":"12425 윷놀이 (Small)"}}},{"node":{"id":"ef88654c-22d3-5af6-b232-ac40429fadd5","fields":{"slug":"/database-index-sql/"},"frontmatter":{"title":"인덱스만 사용하면 성능이 향상될까?"}}},{"node":{"id":"97279d93-b018-5291-a7f8-154ab9af9e06","fields":{"slug":"/database-transaction/"},"frontmatter":{"title":"DBMS는 트랜잭션을 어떻게 관리할까?"}}},{"node":{"id":"556e4443-760f-5c0e-9d3f-56bce92db6bf","fields":{"slug":"/database-isolation-level/"},"frontmatter":{"title":"트랜잭션의 격리 수준(Transaction Isolation Level)"}}},{"node":{"id":"6bb66c2b-026f-566d-84fb-df3ce4dbec95","fields":{"slug":"/boj-17825/"},"frontmatter":{"title":"17825 주사위 윳놀이"}}},{"node":{"id":"0e31350d-6754-56b2-85a5-d739d57c38af","fields":{"slug":"/jscode-study-memoir/"},"frontmatter":{"title":"JSCODE 스터디 되돌아보기"}}},{"node":{"id":"a69e3d86-fa3b-5b23-a46b-27ca07dc31cc","fields":{"slug":"/boj-1325/"},"frontmatter":{"title":"1325 효율적인 해킹"}}},{"node":{"id":"07d0b3a0-20f5-5418-87e3-6e5eff4cbd0a","fields":{"slug":"/boj-1018/"},"frontmatter":{"title":"1018 체스판 다시 칠하기"}}},{"node":{"id":"9dde491d-5904-5c61-84e7-7943094943bd","fields":{"slug":"/boj-1051/"},"frontmatter":{"title":"1051 숫자 정사각형"}}},{"node":{"id":"a563c631-3d22-5595-9063-749fc5553ad3","fields":{"slug":"/boj-2529/"},"frontmatter":{"title":"2529 부등호"}}},{"node":{"id":"b9ebae0f-eb1d-5b1e-890b-1af660585100","fields":{"slug":"/boj-2615/"},"frontmatter":{"title":"2615 오목"}}},{"node":{"id":"c91b8fbb-756d-569e-867a-b441a01f7af8","fields":{"slug":"/boj-15686/"},"frontmatter":{"title":"15686 치킨 배달"}}},{"node":{"id":"c8a562b7-c6eb-5d5f-a167-29ea98d2d2c7","fields":{"slug":"/boj-9663/"},"frontmatter":{"title":"9663 N-Queen"}}},{"node":{"id":"b7249a5d-d62e-511f-a47b-4cae4c5d4a76","fields":{"slug":"/boj-27961/"},"frontmatter":{"title":"27961 고양이는 많을수록 좋다"}}},{"node":{"id":"830ecb3c-ea0c-5b32-932c-b78dea1fd7e6","fields":{"slug":"/prog-42839/"},"frontmatter":{"title":"42839 소수찾기"}}},{"node":{"id":"c14454eb-539e-5270-b82d-a5e74d5846e3","fields":{"slug":"/boj-11399/"},"frontmatter":{"title":"17503 맥주 축제"}}},{"node":{"id":"db022464-1f93-5ca3-b1ef-3ef7a0e53568","fields":{"slug":"/boj-1946/"},"frontmatter":{"title":"1946 신입 사원"}}},{"node":{"id":"442747fb-c36d-5ebf-b571-fc25a484ea56","fields":{"slug":"/boj-19598/"},"frontmatter":{"title":"19598 최소 회의실 개수"}}},{"node":{"id":"d1de5bbb-2949-5108-a4e8-29b57fb29120","fields":{"slug":"/boj-1003/"},"frontmatter":{"title":"1003 피보나치 함수"}}},{"node":{"id":"f66f88d3-87df-5f27-aa94-26a50d7330e8","fields":{"slug":"/boj-2212/"},"frontmatter":{"title":"2212 센서"}}},{"node":{"id":"bdb20dae-34ac-5a09-893c-74ae7b30c8fc","fields":{"slug":"/boj-11053/"},"frontmatter":{"title":"11053 가장 긴 증가하는 부분 수열"}}},{"node":{"id":"0e7377eb-09a1-531d-a44f-08c0014c411f","fields":{"slug":"/boj-9251/"},"frontmatter":{"title":"9251 LCS"}}},{"node":{"id":"9df5e584-f2a1-52e7-99a1-54cfcf2b8d98","fields":{"slug":"/boj-2225/"},"frontmatter":{"title":"2225 합분해"}}},{"node":{"id":"5ed27546-4130-51d0-a15c-fd9346bc5a0a","fields":{"slug":"/boj-1351/"},"frontmatter":{"title":"1351 무한 수열"}}},{"node":{"id":"202eda44-2909-5595-bd82-cb82f45a0ff6","fields":{"slug":"/enablewebmvc-jackson/"},"frontmatter":{"title":"@EnableWebMvc 사용해도 될까?"}}},{"node":{"id":"6d0a4c84-fa22-5a93-956d-8925e17b886f","fields":{"slug":"/annotation-modifying-with-transactional/"},"frontmatter":{"title":"@Query와 @Modifying만 사용하면 될까?"}}},{"node":{"id":"5204b390-54c4-5a3d-898b-8dbe85eeec62","fields":{"slug":"/static-resources-attack/"},"frontmatter":{"title":"디렉토리 스캔 공격은 어떻게 대응해야 할까?"}}},{"node":{"id":"2f361a7b-f132-50c6-a31d-1fb6f6cb18ba","fields":{"slug":"/method-naming/"},"frontmatter":{"title":"Java Method Naming Conventions"}}},{"node":{"id":"f4903cfa-9ebd-5f61-8c70-9f15d1fd5e15","fields":{"slug":"/ec2-cron-alert/"},"frontmatter":{"title":"서버 장애를 대비해 서버 리소스에 대한 Slack Webhook 처리하기"}}},{"node":{"id":"187c27c2-6ef1-560d-8127-7173cc083d5c","fields":{"slug":"/fail2ban-alert/"},"frontmatter":{"title":"Fail2Ban의 상태를 Slack Webhhook 처리하기"}}},{"node":{"id":"9bb120aa-03ff-507f-a287-b07192513173","fields":{"slug":"/2/"},"frontmatter":{"title":"No 'Access-Control-Allow-Origin' header is present on the requested resource"}}},{"node":{"id":"fe089a8a-241a-50b4-a390-8106ba05f4db","fields":{"slug":"/3/"},"frontmatter":{"title":"JSON serialization with Jackson don’t work properly."}}},{"node":{"id":"a6191ffd-2529-5df8-984b-8fda6c70c299","fields":{"slug":"/server-monitoring/"},"frontmatter":{"title":"서버 모니터링에 대한 생각"}}},{"node":{"id":"4a640eb1-312c-5046-a330-010c52c6c644","fields":{"slug":"/bastion-host/"},"frontmatter":{"title":"AWS Bastion Host"}}},{"node":{"id":"96f7894e-d4a9-5bf7-9bb8-830a528eb6ef","fields":{"slug":"/gitactions-connect-private-instance/"},"frontmatter":{"title":"GitHub Actions에서 SSH로 Private 인스턴스에 접근하기"}}},{"node":{"id":"20d53e3c-f47c-5a86-a5ab-6f6b58f0d20d","fields":{"slug":"/gitactions-aws-add-inbound-rule/"},"frontmatter":{"title":"AWS Security Group의 Inbound Rule에 GitHub Actions의 Public IP 추가하기"}}},{"node":{"id":"1c1b69df-adb9-53bc-bc0a-8606822aa0b2","fields":{"slug":"/1/"},"frontmatter":{"title":"301 Moved Permanently"}}},{"node":{"id":"575ef349-72c5-5c06-8530-e2ae7a85f6dc","fields":{"slug":"/1/"},"frontmatter":{"title":"Utility Class에서 생성자를 private으로 선언해야 하는 이유"}}},{"node":{"id":"f7cc2668-fdd8-5081-8d46-4112cbde352b","fields":{"slug":"/id-generator/"},"frontmatter":{"title":"ID를 만드는 방법들"}}},{"node":{"id":"81aed75e-a872-5984-9ec0-e86b482eb8c7","fields":{"slug":"/4/"},"frontmatter":{"title":"Spring에서 Object를 Bean으로 관리하는 이유는 뭘까?"}}},{"node":{"id":"32a2cb86-8f1e-5c8f-9f56-bef33a14fb49","fields":{"slug":"/cookie-session/"},"frontmatter":{"title":"쿠키(Cookie)와 세션(Session)의 차이"}}},{"node":{"id":"7d4b9ff6-50df-50b9-9ffa-626cf0f444df","fields":{"slug":"/uri-url-urn/"},"frontmatter":{"title":"URI, URL, URN의 차이"}}},{"node":{"id":"2a8b8bcd-f005-5fd1-a25c-396b86696c56","fields":{"slug":"/http-https/"},"frontmatter":{"title":"HTTP와 HTTPS의 차이"}}},{"node":{"id":"0b358ad3-9f0a-53d4-9fa7-bfbe38edf138","fields":{"slug":"/not-in-query/"},"frontmatter":{"title":"NOT IN 쿼리를 사용할 때 발생할 수 있는 문제"}}},{"node":{"id":"dd51ec8d-5b49-5e04-94a6-55568bb010b7","fields":{"slug":"/about/"},"frontmatter":{"title":"focus and hustle"}}}]},"previous":{"fields":{"slug":"/item-70/"},"frontmatter":{"title":"복구할 수 있는 상황에는 검사 예외를, 프로그래밍 오류에는 런타임 예외를 사용하라"}},"next":{"fields":{"slug":"/method-naming/"},"frontmatter":{"title":"Java Method Naming Conventions"}}},"pageContext":{"id":"5204b390-54c4-5a3d-898b-8dbe85eeec62","series":null,"previousPostId":"04096e69-9c9c-5140-9c12-5e388d6a1dfb","nextPostId":"2f361a7b-f132-50c6-a31d-1fb6f6cb18ba"}},"staticQueryHashes":[],"slicesMap":{}}