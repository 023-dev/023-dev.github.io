{"componentChunkName":"component---src-pages-search-jsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"리플렉션(Reflection) 리플렉션은 런타임 중에 클래스의 속성, 메서드, 타입 등을 조사하고 수정할 수 있는 자바 API입니다. 리플렉션을 사용하면 컴파일 시간에는 알 수 없던 클래스 정보에 접근하거나, 동적으로 객체를 생성하고 메서드를 호출할 수 있습니다.\n프로그램이 실행 중 경로에 존재하는 코드들을 하나하나 확인하는 것 왜 사용할까? 주석처럼 코…","fields":{"slug":"/java-reflection/"},"frontmatter":{"date":"November 05, 2024","title":"자바 리플렉션(Reflection)","tags":["Java"]},"rawMarkdownBody":"\n# 리플렉션(Reflection)\n\n<hr>\n\n리플렉션은 런타임 중에 클래스의 속성, 메서드, 타입 등을 조사하고 수정할 수 있는 자바 API입니다. 리플렉션을 사용하면 컴파일 시간에는 알 수 없던 클래스 정보에 접근하거나, 동적으로 객체를 생성하고 메서드를 호출할 수 있습니다.\n프로그램이 실행 중 경로에 존재하는 코드들을 하나하나 확인하는 것\n\n## 왜 사용할까?\n주석처럼 코드를 설명하는 것 이상의 구체적인 메타 정보를 제공하여, 프레임워크나 API에서 설정 및 구성을 단순화하고, 런타임 시 동작을 제어하기 위해 사용합니다.\n\n# 어노테이션(Annotation)\n\n<hr>\n\n어노테이션은 코드에 추가 정보를 제공하는 방법으로, 리플렉션을 사용하여 런타임에 해석될 수 있습니다. 어노테이션은 코드의 의도를 명확히 하고, 프레임워크가 코드를 자동으로 처리하는 데 도움을 줄 수 있습니다.\n리플렉션을 효율적으로 하게 해주는 것\n\n# 리플렉션을 활용한 어노테이션 메타 데이터 가져오기 경험\n<hr>\n\n실제로 리플렉션을 활용해 커스텀 어노테이션의 메타 데이터를 추출하고, 자동 주입 로직을 구현한 경험이 있습니다."},{"excerpt":"암기왕  풀이 문제를 보면 해당 문제는 탐색 알고리즘을 사용해서 해결하라는 것을 알 수 있다.\n어떤 탐색 알고리즘을 사용하냐는 시간제한과 실제 탐색해야할 개수를 보고 선택해야 한다.\n내가 생각한 건 2가지 방식이다.\n하나는 순회하면서 직접 탐색하여 해결하는 방식과 나머지 하나는 이분 탐색으로 해결하는 방식이다.\n직접 탐색에 경우는","fields":{"slug":"/2776/"},"frontmatter":{"date":"November 05, 2024","title":"2776 암기왕","tags":["Algorithm"]},"rawMarkdownBody":"\n# [암기왕](https://www.acmicpc.net/problem/2776)\n\n![img.png](img.png)\n\n## 풀이\n\n문제를 보면 해당 문제는 탐색 알고리즘을 사용해서 해결하라는 것을 알 수 있다.\n어떤 탐색 알고리즘을 사용하냐는 시간제한과 실제 탐색해야할 개수를 보고 선택해야 한다.\n내가 생각한 건 2가지 방식이다.\n하나는 순회하면서 직접 탐색하여 해결하는 방식과 나머지 하나는 이분 탐색으로 해결하는 방식이다.\n직접 탐색에 경우는 \n\n"},{"excerpt":"1. 포스트 추가하기  경로에 새로운 마크다운 파일을 생성하여 여러분의 글을 추가할 수 있습니다. 1-1. 포스트 파일 구조 새로운 문서를 추가하는 방법에는 두가지가 있습니다. 첫번째는 디렉토리 없이 문서를 생성하는 방법입니다. 만약 여러분이 Javascript 에 관한 문서를 생성한다면,  파일을  디렉토리에 추가할 수 있습니다. 두번째 방법은 먼저 디…","fields":{"slug":"/writing-guide-kr/"},"frontmatter":{"date":"April 03, 2021","title":"🤔 3. 작성 가이드","tags":["hoodie","writing-guide"]},"rawMarkdownBody":"\n## 1. 포스트 추가하기\n\n`contents/post` 경로에 새로운 마크다운 파일을 생성하여 여러분의 글을 추가할 수 있습니다.\n\n### 1-1. 포스트 파일 구조\n\n새로운 문서를 추가하는 방법에는 두가지가 있습니다. 첫번째는 디렉토리 없이 문서를 생성하는 방법입니다. 만약 여러분이 Javascript 에 관한 문서를 생성한다면, `about-javascript.md` 파일을 `contents/posts` 디렉토리에 추가할 수 있습니다.\n\n두번째 방법은 먼저 디렉토리를 생성한 뒤, 디렉토리 안에 `index.md` 파일을 추가하는 것 입니다. 이 방법은 문서 내에 여러 이미지 파일 등 부수적인 파일 여러개가 포함되었을 때 유용합니다.\n\n첫번째 방법으로 생성한 파일명이나, 두번째 방법으로 생성한 디렉토리 이름은 웹사이트에서 고유의 주소를 갖습니다. `https://siteURL/about-javascript` 와 같이요.\n\n### 1-2. Frontmatter\n\n마크다운은 문서의 메타데이터인 Frontmatter 라 불리는 정보를 가지고 있습니다.\n\n```\n---\ntitle: \"🤔 3. 작성 가이드\"\ndescription: \"어떻게 글을 작성하고 추가할까요?\"\ndate: 2021-04-03\nupdate: 2021-04-03\ntags:\n  - hoodie\n  - writing-guide\nseries: \"gatsby-starter-hoodie 로 블로그 시작하기\"\n---\n```\n\n위는 지금 여러분이 읽고 있는 문서의 Frontmatter 입니다. `title` 과 `date` 는 필수 값입니다. 띄어쓰기를 포함된 문자열을 입력할 때에는 따옴표로 감싸는 것을 추천합니다.\n\n### 1-3. 마크다운 작성하기\n\n만약 Frontmatter 까지 작성했다면, 여러분은 그 아래에 마크다운 문서를 작성하면 됩니다. gatsby-starter-hoodie 는 대부분의 마크다운 문법을 지원합니다. 마크다운 작성 방법을 알고 싶다면, Github 의 Mastering Markdown[^1] 문서를 참고하세요.\n\n## 2. 코드 하이라이팅 & Katex\n\n### 2-1. 코드 하이라이팅\n\nPrism.JS 에 기반한 코드 하이라이팅이 제공됩니다.\n\n#### 예시\n\nJavascript\n\n```javascript\nconsole.log(\"Hello, world!\")\n```\n\nPython\n\n```python\nprint(\"Hello, world!\")\n```\n\n그 외 더 많은 언어를 제공합니다. 제공되는 언어를 확인하고 싶다면, [Prism.js 웹사이트](https://prismjs.com/) 를 참고하세요.\n\n### 2-2. Katex\n\nKatex 문법을 지원하여 복잡한 수식도 쉽게 표현할 수 있습니다.\n\n#### 인라인 모드\n\n$$E = m c^{2}$$\n\n#### 블럭 모드\n\n$$\n\\int_{0}^{\\infty} f(x) dx\n$$\n\n## 3. 글에 이미지 추가하기\n\n상대경로를 이용하여 쉽게 이미지를 추가할 수 있습니다. 디렉토리를 생성하고 그 안에 `index.md` 를 추가하여, 글을 추가하는 방법으로 작성해야 이미지 관리가 쉽습니다.\n\n![샘플 이미지 캡션](sample-image.jpg)\n\n이미지는 Lazy Loading 으로 로드되어, 빠른 초기 문서 로딩 속도를 확보할 수 있습니다.\n\n> ⚠ 이미지의 모든 확장자는 소문자여야합니다.\n\n## 4. 태그\n\n![](tag-example.jpg)\n\nFrontmatter 의 태그를 통해 쉽게 문서를 분류하고 검색할 수 있습니다. 여러분의 모든 태그는 `https://siteUrl/tags` 경로에서 확인하고, 검색할 수 있습니다.\n\n## 5. 시리즈\n\n![](series-example.jpg)\n\n여러분이 연관된 여러개의 문서를 작성할 때 시리즈를 사용할 수 있습니다. Frontmatter 에 작성된 시리즈가 같은 문서끼리 묶여 문서 상단에 리스트로 표시됩니다. 시리즈는 일련의 순서가 있는 문서들을 작성할 때 유용하게 사용할 수 있습니다. 시리즈는 문서의 작성 날짜 순서대로 정렬됩니다.\n\n현재 문서는 `gatsby-starter-hoodie 로 블로그 시작하기` 라는 시리즈로 설정되어 있습니다.\n\n[^1]: https://guides.github.com/features/mastering-markdown/\n"}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}